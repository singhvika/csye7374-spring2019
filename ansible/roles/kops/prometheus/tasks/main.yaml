---
#roles/setup_prometheus/tasks

#All Setup Tasks:
  - name: Get the cluster IP of the load balancer
    shell: kubectl get pods -n default -o json | jq -c -r '.items[] | select  ( .metadata.labels.app=="{{appName}}") | select(.metadata.name="cloudapp-replica-rontroller-*") | .status.podIP +":8080" '
    register: ip

  - name: Delete old values.yaml for prometheus
    file:
      path: "{{playbook_dir}}/values_prometheus.yaml"
      state:  absent

  - name: Copy template values.yaml
    copy:
      src:  "{{playbook_dir}}/roles/kops/prometheus/templates/values_prometheus_template.yaml"
      dest: "{{playbook_dir}}/values_prometheus.yaml"

  - name: Generate a valid values.yaml for prometheus
    replace: 
      path: "{{playbook_dir}}/values_prometheus.yaml"
      regexp: 'app_lb_internal_ips'
      replace: "{{ip.stdout.split('\n')}}"

  - name: Setup Prometheus Dashboard
    shell: helm install --name prometheus stable/prometheus

  - name: Wait until all Prometheus Pods are Ready
    shell: "kubectl get pods --namespace default -l \"app=prometheus,release=prometheus\" -o jsonpath=\"{.items[{{ item }}].status.conditions[1].status}\""
    register: status
    until: status.stdout.find('True')  !=  -1
    retries: 20
    delay: 10
    loop: #Looping for all the respective Prometheus Pods to be READY
        - 0 #prometheus-alertmanager
        - 1 #prometheus-kube-state-metrics
        - 2 #prometheus-node-exporter
        - 3 #prometheus-node-exporter
        - 4 #prometheus-node-exporter
        - 5 #prometheus-pushgateway
        - 6 #prometheus-server

  - name: Exporting pod name as env variable
    shell: kubectl get pods --namespace default -l "app=prometheus,component=server" -o jsonpath="{.items[0].metadata.name}"
    register: pod_name

  - name: Port Forwarding Prometheus with our Pods to 9090
    shell: kubectl --namespace default port-forward {{ pod_name.stdout }} 9090
...